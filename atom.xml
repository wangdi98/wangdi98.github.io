<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Myblog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-06-03T13:22:49.638Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>WD</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>redhat中DNS服务器配置</title>
    <link href="http://yoursite.com/2019/06/03/redhat%E4%B8%ADDNS%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2019/06/03/redhat中DNS服务器配置/</id>
    <published>2019-06-03T13:15:28.176Z</published>
    <updated>2019-06-03T13:22:49.638Z</updated>
    
    <content type="html"><![CDATA[<p>Redhat6.5中搭建DNS域名解析服务<br>DNS系统在网络中的作用就是维护着一个地址数据库，其中记录了各种主机域名与IP地址的对应关系，以便为客户程序提供正向或反向的地址查询服务。<br>下面我将在Redhat6.5中搭建DNS域名解析服务，包括正向解析，反向解析。<br>正向解析<br>1、安装bind软件包，bind软件包提供了域名服务的主要程序和相关文件。<br>Redhat6.5中搭建DNS域名解析服务<br><img src="https://s1.51cto.com/images/blog/201805/18/9a5e44eb1e49f51172ca655528b9c8b8.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt=""><br>2、bind安装完成，可以使用rpm -qc bind显示bind软件包安装的配置文件<img src="https://s1.51cto.com/images/blog/201805/18/19d0fc5e30013dd12f0b0dbf5e6944fe.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt=""></p><p>3、编辑主配置文件，修改监听地址为提供DNS服务的主机IP地址，我本次实验为本机IP地址，allow-query改成any表示所有网段都允许访问<br><img src="https://s1.51cto.com/images/blog/201805/18/c775538ecc755f60622219d35b31172a.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt=""><br>4、编辑区域配置文件，file指定区域数据配置文件，正向解析的区域数据配置文件后缀名为zone，反向解析的文件名后缀为local<br><img src="https://s1.51cto.com/images/blog/201805/18/a3e61c6a5c4c11c5656c0f0d957b1067.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt=""><br>5、编辑区域数据配置文件，可先复制模板但要保留文件原有属性，使用cp -p命令<img src="https://s1.51cto.com/images/blog/201805/18/a00833b920b01a7c3c53b955a86a02a6.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt=""><br><img src="https://s1.51cto.com/images/blog/201805/18/141e46784ba7dd58b6edbc4f0bf03158.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt=""></p><p>6、开启服务，将DNS服务器地址写入/etc/resolv.conf文件中，便可使用host命令进行解析<br><img src="https://s1.51cto.com/images/blog/201805/18/ba97285f3e7e798521c614196ef8a605.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt=""><br>7、此外，在同网段的win7系统上同样可以进行解析，在此之前需关闭Linux防火墙和安全功能，使用nslookup命令<br><img src="https://s1.51cto.com/images/blog/201805/18/a732ca3c10f5fd7238fbc67812abadd6.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt=""><br><img src="https://s1.51cto.com/images/blog/201805/18/71926dafdafac8e28b521e09ce031e12.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt=""><br>反向解析<br>1、修改区域配置文件<br><img src="https://s1.51cto.com/images/blog/201805/18/ccc0d5cea09b73704f0ddc31bb1c08ca.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt=""><br>2、修改区域数据配置文件<br><img src="https://s1.51cto.com/images/blog/201805/18/eb308a01b1024fc50de13f954fa37dc1.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt=""><br>3、验证反向解析<br><img src="https://s1.51cto.com/images/blog/201805/18/72c7422e9b12e0ddf3f2268dafc68781.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt=""><br><img src="https://s1.51cto.com/images/blog/201805/18/128e6ff1961b99508c5c310d3167dd13.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_100,g_se,x_10,y_10,shadow_90,type_ZmFuZ3poZW5naGVpdGk=" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Redhat6.5中搭建DNS域名解析服务&lt;br&gt;DNS系统在网络中的作用就是维护着一个地址数据库，其中记录了各种主机域名与IP地址的对应关系，以便为客户程序提供正向或反向的地址查询服务。&lt;br&gt;下面我将在Redhat6.5中搭建DNS域名解析服务，包括正向解析，反向解析。
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>PHP弱类型</title>
    <link href="http://yoursite.com/2019/05/25/PHP%E5%BC%B1%E7%B1%BB%E5%9E%8B/"/>
    <id>http://yoursite.com/2019/05/25/PHP弱类型/</id>
    <published>2019-05-25T06:42:01.613Z</published>
    <updated>2019-05-25T06:50:26.572Z</updated>
    
    <content type="html"><![CDATA[<h2 id="弱等于-“-”"><a href="#弱等于-“-”" class="headerlink" title="弱等于 “==”"></a>弱等于 “==”</h2><ol><li>== 在进行比较的时候，会先将字符串类型转化成相同，再比较。<blockquote><p>如果比较一个数字和字符串或者比较涉及到数字内容的字符串，则字符串会被转换成数值并且比较按照数值来进行</p><a id="more"></a><p>例如：</p><p>&lt;?php<br>var_dump(“admin”==0);  //true</p></blockquote></li></ol><blockquote><p>var_dump(“1admin”==1); //true</p></blockquote><blockquote><p>var_dump(“admin1”==1) //false</p></blockquote><blockquote><p>var_dump(“admin1”==0) //true</p></blockquote><blockquote><p>var_dump(“0e123456”==”0e4456789”); //true </p></blockquote><blockquote><p>?&gt; </p></blockquote><ul><li>1 观察上述代码，”admin”==0 比较的时候，会将admin转化成数值，强制转化,由于admin是字符串，转化的结果是0自然和0相等</li><li>2 “1admin”==1 比较的时候会将1admin转化成数值,结果为1，而“admin1“==1 却等于错误，也就是”admin1”被转化成了0,为什么呢？</li></ul><blockquote><ul><li>3 “0e123456”==”0e456789”相互比较的时候，会将0e这类字符串识别为科学技术法的数字，0的无论多少次方都是零，所以相等</li></ul></blockquote><hr><p>所以，当一个字符串欸当作一个数值来取值，其结果和类型如下:如果该字符串没有包含’.’,’e’,’E’并且其数值值在整形的范围之内<br>该字符串被当作int来取值，其他所有情况下都被作为float来取值，该字符串的开始部分决定了它的值，如果该字符串以合法的数值开始，则使用该数值，否则其值为0。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;弱等于-“-”&quot;&gt;&lt;a href=&quot;#弱等于-“-”&quot; class=&quot;headerlink&quot; title=&quot;弱等于 “==”&quot;&gt;&lt;/a&gt;弱等于 “==”&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;== 在进行比较的时候，会先将字符串类型转化成相同，再比较。&lt;blockquote&gt;
&lt;p&gt;如果比较一个数字和字符串或者比较涉及到数字内容的字符串，则字符串会被转换成数值并且比较按照数值来进行&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>-GET与-POST</title>
    <link href="http://yoursite.com/2019/05/24/-GET%E4%B8%8E-POST/"/>
    <id>http://yoursite.com/2019/05/24/-GET与-POST/</id>
    <published>2019-05-24T11:29:16.793Z</published>
    <updated>2019-05-24T12:31:28.758Z</updated>
    
    <content type="html"><![CDATA[<p>在 PHP 中，预定义的 $_GET 变量用于收集来自 method=”get” 的表单中的值。<br><a id="more"></a></p><h2 id="GET-变量"><a href="#GET-变量" class="headerlink" title="$_GET 变量"></a>$_GET 变量</h2><p>预定义的 $_GET 变量用于收集来自 method=”get” 的表单中的值。</p><p>从带有 GET 方法的表单发送的信息，对任何人都是可见的（<strong>会显示在浏览器的地址栏</strong>），并且对发送信息的量也有限制。</p><ul><li>通过 $_GET 变量来收集表单数据</li></ul><blockquote><p>在 HTML 表单中使用 method=”get” 时，所有的变量名和值都会显示在 URL 中。</p></blockquote><blockquote><p>注释：所以在发送密码或其他敏感信息时，不应该使用这个方法！</p></blockquote><blockquote><p>然而，正因为变量显示在 URL 中，因此可以在收藏夹中收藏该页面。在某些情况下，这是很有用的。</p></blockquote><blockquote><p>注释：HTTP GET 方法不适合大型的变量值。它的值是不能超过 2000 个字符的。</p></blockquote><ul><li>在URL后直接写入要传入的参数的值如：<blockquote><p><a href="http://123.206.87.240:8002/get/" target="_blank" rel="noopener">http://123.206.87.240:8002/get/</a><br><a href="http://123.206.87.240:8002/get/?what=flag" target="_blank" rel="noopener">http://123.206.87.240:8002/get/?what=flag</a></p></blockquote></li></ul><p>得到:</p><p>$what=$_GET[‘what’]; </p><p>echo $what;</p><p>if($what==’flag’)</p><p>echo ‘flag{<em>**</em>}’;</p><p>flagflag{bugku_get_su8kej2en}</p><p>##$_POST##</p><ul><li>_POST传参时，直接抓包。在数据段直接输入要传入的参数的值</li><li>注意：在写入数据时要在前面添加<blockquote><p>Content-type: application/x-www-form-urlencode(或者其他）</p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在 PHP 中，预定义的 $_GET 变量用于收集来自 method=”get” 的表单中的值。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>redhat配置DHCP服务器</title>
    <link href="http://yoursite.com/2019/05/23/redhat%E9%85%8D%E7%BD%AEDHCP%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://yoursite.com/2019/05/23/redhat配置DHCP服务器/</id>
    <published>2019-05-23T12:54:00.086Z</published>
    <updated>2019-05-23T12:56:43.873Z</updated>
    
    <content type="html"><![CDATA[<p>1.由于虚拟机也提供了dhcp服务，因此用nat或host-only时会选用虚拟机的dhcp服务，因此要在虚拟网络编辑器中取消分配dhcp<br><a id="more"></a><br>2.移除virbr0虚拟网卡；<br><a href="https://blog.csdn.net/csdn_immortal/article/details/81068259" target="_blank" rel="noopener">https://blog.csdn.net/csdn_immortal/article/details/81068259</a></p><p>3.配置静态ip，要与dhcp子网在同一网段；</p><pre><code>vi /etc/sysconfig/network-scripts/ifcfg-ethxxxx</code></pre><p>修改内容：</p><pre><code>BOOTPROTO=staticIPADDR=192.168.2.5GATEWAY=192.168.2.1</code></pre><p>4.配置dhcp</p><pre><code>vi /etc/dhcp/dhcpd.conf</code></pre><p>修改后内容如下：</p><pre><code>ddns-update-style interim;ignore client-updates;subnet 192.168.2.0 netmask 255.255.255.0 {# --- default gateway        option routers 192.168.2.1;        option subnet-mask 255.255.255.0;        range dynamic-bootp 192.168.2.50 192.168.2.60;        default-lease-time 21600;        max-lease-time 43200;}                                                                  </code></pre><p>5.开始用service dhcpd start启动dhcp，但出现Redirecting to /bin/systemctl start  dhcpd.service;</p><p>改用systemctl start dhcpd.service启动dhcp服务</p><p>用systemctl status dhcpd.service查看服务状态</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.由于虚拟机也提供了dhcp服务，因此用nat或host-only时会选用虚拟机的dhcp服务，因此要在虚拟网络编辑器中取消分配dhcp&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>javac配置</title>
    <link href="http://yoursite.com/2019/05/23/javac%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2019/05/23/javac配置/</id>
    <published>2019-05-23T09:03:02.710Z</published>
    <updated>2019-05-23T09:25:15.281Z</updated>
    
    <content type="html"><![CDATA[<p> Windows7安装JDK的环境变量设置 Windows7 X64安装“jdk-6u26-windows-x64.exe”后，按照网上的环境变量设置方法设置了环境变量，但是死活都提示“javac不是内部命令或外部命令，也不是可运行的程序或批处理文件”。 </p><a id="more"></a><hr><ul><li>第一步：安装jdk-6u26-windows-x64.exe，路径为默认路径，一直下一步直到完成安装。</li></ul><hr><ul><li>第二步：设置环境变量：</li></ul><ol><li>进入环境变量设置的方法，这里只针对Windows7，其它的请童鞋们上网查找：     “计算机”右键“属性”——“高级系统设置”——“高级”——“环境变量”打开环境变量设置窗口。</li><li>在下面的“系统环境变量”设置窗口中，点击“新建”，建立JAVA_HOME变量：<br>变量名：JAVA_HOME<br>变量值：C:\Program Files\Java\jdk1.6.0_26</li></ol><ol><li>在下面的“系统环境变量”设置窗口中，点击“新建”，建立CLASSPATH变量：<br>变量名：CLASSPATH<br>变量值：C:\Program Files\Java\jdk1.6.0_26\lib\dt.jar;C:\Program Files\Java\jdk1.6.0_26\lib\tools.jar; （注意分号）</li></ol><ol><li>在下面的“系统环境变量”设置窗口中，双击“PATH”变量，在变量值后添加：    ;C:\Program Files\Java\jdk1.6.0_26\bin; (注意分号)<br>第三步：在“运行”中输入cmd，回车后，打开命令窗口，输入javac，如果出现下图：那就说明安装配置都正确了。<img src="https://i.imgur.com/zjpvXuu.png" alt=""><br>如果出现下图：<img src="https://i.imgur.com/pBZxVad.png" alt=""><br>那很不幸，童鞋们还得继续努力，请接着往下看：<br> 安装jdk，设置好环境变量后，在cmd中输入javac命令无法使用，提示“javac不是内部命令或外部命令，也不是可运行的程序或批处理文件”  但是输入 java -version能正常显示jdk版本号，说明java命令可用。我输入Java -home后，发现指向的路径完全不对，环境变量设置没起作用，不知是何原因。</li></ol><hr><p>解决方案：<br>运行——&gt;cmd<br>在控制台中运行以下命令设置java环境变量即可解决：<br>set java_home=C:\Program Files\Java\jdk1.6.0_26<br>set classpath=%JAVA_HOME%\lib\tools.jar;%JAVA_HOME%\lib\dt.jar;<br>set path=%JAVA_HOME%\bin; </p><hr><p>注：输入不区分大小写，另外附上几个Java命令<br>java -help  可以查看命令<br>java -home  查看JDK安装路径<br>java -version  查看JDK版本</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; Windows7安装JDK的环境变量设置 Windows7 X64安装“jdk-6u26-windows-x64.exe”后，按照网上的环境变量设置方法设置了环境变量，但是死活都提示“javac不是内部命令或外部命令，也不是可运行的程序或批处理文件”。 &lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>python头文件</title>
    <link href="http://yoursite.com/2019/05/23/python%E5%A4%B4%E6%96%87%E4%BB%B6/"/>
    <id>http://yoursite.com/2019/05/23/python头文件/</id>
    <published>2019-05-23T06:14:22.930Z</published>
    <updated>2019-05-23T09:04:44.010Z</updated>
    
    <content type="html"><![CDATA[<p> <strong>python中的头文件</strong></p><ul><li>from math import sqrt</li></ul><p>是把sqrt作为本文件的方法导入进来了，使用的时候只需要直接调用sqrt。</p><a id="more"></a><hr><ul><li>import math</li></ul><p>如果import是import math，那么调用的时候要采用<strong>math.</strong>sqrt的方式。<br>那么如果在自己的文件里定义了相同名字的函数怎么办呢？</p><pre><code>from math import sqrtdef sqrt(n):   return n print sqrt(13689) </code></pre><p>运行py文件输出13689，所以自己定义了函数会自动屏蔽掉。<br>所以大量引用import math.<em>是个比较好的办法，from math import </em>就容易出错了，当然用到很少的函数且次数较多时上面这种办法会比较合适。<br>另外python不支持像java那样import math.sqrt</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; &lt;strong&gt;python中的头文件&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;from math import sqrt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是把sqrt作为本文件的方法导入进来了，使用的时候只需要直接调用sqrt。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>hello</title>
    <link href="http://yoursite.com/2019/05/23/hello/"/>
    <id>http://yoursite.com/2019/05/23/hello/</id>
    <published>2019-05-23T03:17:10.000Z</published>
    <updated>2019-05-23T03:55:06.977Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>你好</title>
    <link href="http://yoursite.com/2018/11/11/%E4%BD%A0%E5%A5%BD/"/>
    <id>http://yoursite.com/2018/11/11/你好/</id>
    <published>2018-11-11T10:54:39.000Z</published>
    <updated>2019-05-23T03:55:03.034Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title> 你好。HEXO</title>
    <link href="http://yoursite.com/2018/11/11/%E4%BD%A0%E5%A5%BD%E3%80%82HEXO/"/>
    <id>http://yoursite.com/2018/11/11/你好。HEXO/</id>
    <published>2018-11-11T10:04:56.000Z</published>
    <updated>2019-05-23T03:54:58.389Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
</feed>
