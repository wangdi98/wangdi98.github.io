<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Myblog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-05-23T12:56:43.873Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>WD</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>redhat配置DHCP服务器</title>
    <link href="http://yoursite.com/2019/05/23/redhat%E9%85%8D%E7%BD%AEDHCP%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://yoursite.com/2019/05/23/redhat配置DHCP服务器/</id>
    <published>2019-05-23T12:54:00.086Z</published>
    <updated>2019-05-23T12:56:43.873Z</updated>
    
    <content type="html"><![CDATA[<p>1.由于虚拟机也提供了dhcp服务，因此用nat或host-only时会选用虚拟机的dhcp服务，因此要在虚拟网络编辑器中取消分配dhcp<br><a id="more"></a><br>2.移除virbr0虚拟网卡；<br><a href="https://blog.csdn.net/csdn_immortal/article/details/81068259" target="_blank" rel="noopener">https://blog.csdn.net/csdn_immortal/article/details/81068259</a></p><p>3.配置静态ip，要与dhcp子网在同一网段；</p><pre><code>vi /etc/sysconfig/network-scripts/ifcfg-ethxxxx</code></pre><p>修改内容：</p><pre><code>BOOTPROTO=staticIPADDR=192.168.2.5GATEWAY=192.168.2.1</code></pre><p>4.配置dhcp</p><pre><code>vi /etc/dhcp/dhcpd.conf</code></pre><p>修改后内容如下：</p><pre><code>ddns-update-style interim;ignore client-updates;subnet 192.168.2.0 netmask 255.255.255.0 {# --- default gateway        option routers 192.168.2.1;        option subnet-mask 255.255.255.0;        range dynamic-bootp 192.168.2.50 192.168.2.60;        default-lease-time 21600;        max-lease-time 43200;}                                                                  </code></pre><p>5.开始用service dhcpd start启动dhcp，但出现Redirecting to /bin/systemctl start  dhcpd.service;</p><p>改用systemctl start dhcpd.service启动dhcp服务</p><p>用systemctl status dhcpd.service查看服务状态</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.由于虚拟机也提供了dhcp服务，因此用nat或host-only时会选用虚拟机的dhcp服务，因此要在虚拟网络编辑器中取消分配dhcp&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>javac配置</title>
    <link href="http://yoursite.com/2019/05/23/javac%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2019/05/23/javac配置/</id>
    <published>2019-05-23T09:03:02.710Z</published>
    <updated>2019-05-23T09:25:15.281Z</updated>
    
    <content type="html"><![CDATA[<p> Windows7安装JDK的环境变量设置 Windows7 X64安装“jdk-6u26-windows-x64.exe”后，按照网上的环境变量设置方法设置了环境变量，但是死活都提示“javac不是内部命令或外部命令，也不是可运行的程序或批处理文件”。 </p><a id="more"></a><hr><ul><li>第一步：安装jdk-6u26-windows-x64.exe，路径为默认路径，一直下一步直到完成安装。</li></ul><hr><ul><li>第二步：设置环境变量：</li></ul><ol><li>进入环境变量设置的方法，这里只针对Windows7，其它的请童鞋们上网查找：     “计算机”右键“属性”——“高级系统设置”——“高级”——“环境变量”打开环境变量设置窗口。</li><li>在下面的“系统环境变量”设置窗口中，点击“新建”，建立JAVA_HOME变量：<br>变量名：JAVA_HOME<br>变量值：C:\Program Files\Java\jdk1.6.0_26</li></ol><ol><li>在下面的“系统环境变量”设置窗口中，点击“新建”，建立CLASSPATH变量：<br>变量名：CLASSPATH<br>变量值：C:\Program Files\Java\jdk1.6.0_26\lib\dt.jar;C:\Program Files\Java\jdk1.6.0_26\lib\tools.jar; （注意分号）</li></ol><ol><li>在下面的“系统环境变量”设置窗口中，双击“PATH”变量，在变量值后添加：    ;C:\Program Files\Java\jdk1.6.0_26\bin; (注意分号)<br>第三步：在“运行”中输入cmd，回车后，打开命令窗口，输入javac，如果出现下图：那就说明安装配置都正确了。<img src="https://i.imgur.com/zjpvXuu.png" alt=""><br>如果出现下图：<img src="https://i.imgur.com/pBZxVad.png" alt=""><br>那很不幸，童鞋们还得继续努力，请接着往下看：<br> 安装jdk，设置好环境变量后，在cmd中输入javac命令无法使用，提示“javac不是内部命令或外部命令，也不是可运行的程序或批处理文件”  但是输入 java -version能正常显示jdk版本号，说明java命令可用。我输入Java -home后，发现指向的路径完全不对，环境变量设置没起作用，不知是何原因。</li></ol><hr><p>解决方案：<br>运行——&gt;cmd<br>在控制台中运行以下命令设置java环境变量即可解决：<br>set java_home=C:\Program Files\Java\jdk1.6.0_26<br>set classpath=%JAVA_HOME%\lib\tools.jar;%JAVA_HOME%\lib\dt.jar;<br>set path=%JAVA_HOME%\bin; </p><hr><p>注：输入不区分大小写，另外附上几个Java命令<br>java -help  可以查看命令<br>java -home  查看JDK安装路径<br>java -version  查看JDK版本</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; Windows7安装JDK的环境变量设置 Windows7 X64安装“jdk-6u26-windows-x64.exe”后，按照网上的环境变量设置方法设置了环境变量，但是死活都提示“javac不是内部命令或外部命令，也不是可运行的程序或批处理文件”。 &lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>python头文件</title>
    <link href="http://yoursite.com/2019/05/23/python%E5%A4%B4%E6%96%87%E4%BB%B6/"/>
    <id>http://yoursite.com/2019/05/23/python头文件/</id>
    <published>2019-05-23T06:14:22.930Z</published>
    <updated>2019-05-23T09:04:44.010Z</updated>
    
    <content type="html"><![CDATA[<p> <strong>python中的头文件</strong></p><ul><li>from math import sqrt</li></ul><p>是把sqrt作为本文件的方法导入进来了，使用的时候只需要直接调用sqrt。</p><a id="more"></a><hr><ul><li>import math</li></ul><p>如果import是import math，那么调用的时候要采用<strong>math.</strong>sqrt的方式。<br>那么如果在自己的文件里定义了相同名字的函数怎么办呢？</p><pre><code>from math import sqrtdef sqrt(n):   return n print sqrt(13689) </code></pre><p>运行py文件输出13689，所以自己定义了函数会自动屏蔽掉。<br>所以大量引用import math.<em>是个比较好的办法，from math import </em>就容易出错了，当然用到很少的函数且次数较多时上面这种办法会比较合适。<br>另外python不支持像java那样import math.sqrt</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; &lt;strong&gt;python中的头文件&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;from math import sqrt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是把sqrt作为本文件的方法导入进来了，使用的时候只需要直接调用sqrt。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>hello</title>
    <link href="http://yoursite.com/2019/05/23/hello/"/>
    <id>http://yoursite.com/2019/05/23/hello/</id>
    <published>2019-05-23T03:17:10.000Z</published>
    <updated>2019-05-23T03:55:06.977Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>你好</title>
    <link href="http://yoursite.com/2018/11/11/%E4%BD%A0%E5%A5%BD/"/>
    <id>http://yoursite.com/2018/11/11/你好/</id>
    <published>2018-11-11T10:54:39.000Z</published>
    <updated>2019-05-23T03:55:03.034Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title> 你好。HEXO</title>
    <link href="http://yoursite.com/2018/11/11/%E4%BD%A0%E5%A5%BD%E3%80%82HEXO/"/>
    <id>http://yoursite.com/2018/11/11/你好。HEXO/</id>
    <published>2018-11-11T10:04:56.000Z</published>
    <updated>2019-05-23T03:54:58.389Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
</feed>
